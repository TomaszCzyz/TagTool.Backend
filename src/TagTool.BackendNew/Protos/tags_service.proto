syntax = "proto3";

import "google/protobuf/any.proto";
import "google/protobuf/wrappers.proto";
import "Protos/tags_service_types.proto";

option csharp_namespace = "TagTool.BackendNew.Services.Grpc";

package TagToolBackendNew;

service TagsService {
  // Creates a new Tag. If tag cannot be created returns error message.
  rpc CreateTag (CreateTagRequest) returns (CreateTagReply);

  // Checks if tag with given name can be created.
  rpc CanCreateTag(stream CanCreateTagRequest) returns (stream CanCreateTagReply);

  // Deletes a Tag if tag exists and is unused, otherwise return error message.
  // Used tags can be deleted be setting 'deleteUsedToo' flag.
  rpc DeleteTag (DeleteTagRequest) returns (DeleteTagReply);

  // Adds an item of given type, if type is supported.
  rpc TagItem(TagItemRequest) returns (TagItemReply);

  // Tags an item.
  rpc AddItem(AddItemRequest) returns (AddItemReply);

  // Untags an item if one exists.
  rpc UntagItem(UntagItemRequest) returns (UntagItemReply);

  // Invokes operation specific to the taggable item.
  rpc GetOperations(GetOperationsRequest) returns (GetOperationsReply);

  // Invokes operation specific to the taggable item.
  rpc InvokeOperation(InvokeOperationRequest) returns (InvokeOperationReply);

  // Gets an info about an item if one exists.
  rpc GetItem(GetItemRequest) returns (GetItemReply);

  // Gets items which tags are meet the request conditions.
  rpc GetItemsByTags(GetItemsByTagsRequest) returns (GetItemsByTagsReply);

  // Checks if given Tags already exists.
  rpc DoesTagExists(DoesTagExistsRequest) returns (DoesTagExistsReply);

  // Searches existing tags for matches or partial matches.
  rpc SearchTags(SearchTagsRequest) returns (stream SearchTagsReply);

  // Reverts effects of the last command, such as CreateTag, TagItem, e.t.c.

  rpc Undo(UndoRequest) returns (UndoReply);

  // Repeats command reverted by Undo endpoint.
  rpc Redo(RedoRequest) returns (RedoReply);

  // Sets convention of tag names. The convention is applied when tag is created
  // and tag name is stored in given format.
  rpc SetTagNamingConvention(SetTagNamingConventionRequest) returns (SetTagNamingConventionReply);
}
