syntax = "proto3";

import "Protos/DomainTypes.proto";

option csharp_namespace = "TagTool.Backend";

package TagToolBackend;

service FileActionsService {
  // This bi-directional call allows to check correctness of a new filename as it is changing.
  rpc CanRenameFile (stream CanRenameFileRequest) returns (stream CanRenameFileReply);
  // Renames a given file name.
  rpc RenameFile (RenameFileRequest) returns (RenameFileReply);
  // Moves a file to specified location.
  rpc MoveFile (MoveFileRequest) returns (MoveFileReply);
  // Deletes a specified file.
  rpc DeleteFile (DeleteFileRequest) returns (DeleteFileReply);
  // Opens a file with default system application using shell.
  rpc OpenFile (OpenFileRequest) returns (OpenFileReply);
  // Detect new files (and folders?).
  rpc DetectNewItems (DetectNewItemsRequest) returns (DetectNewItemsReply);
}

message CanRenameFileRequest {
  // The item to rename.
  FileDto file = 1;
  // The new filename to check.
  string newFileName = 2;
}

// The result indicating if file can be renamed to provided filename.
message CanRenameFileReply {
  // The result that contains error in case when operation failed.
  oneof result {
    // The error describing the reason of a failure.
    Error error = 1;
  }
}

// The request to rename a given file.
message RenameFileRequest {
  // The item to rename.
  FileDto file = 1;
  // New filename.
  string newFileName = 2;
}

// The result of rename operation.
message RenameFileReply {
  // The result indicating if renaming was successful.
  oneof result {
    // New location of a renamed file.
    string newFullName = 1;
    // The error message.
    string errorMessage = 2;
  };
}

// The request to move file to new location.
message MoveFileRequest {
  // The file to move.
  FileDto file = 1;
  // The destination as full path, i.e. with filename.
  string destination = 2;
}

// The reply indicating if moving of a file was successful.
message MoveFileReply {
  oneof result {
    // New location of a moved file.
    string newLocation = 1;
    // The error message.
    string errorMessage = 2;
  };
  // additional info, i.e. 'similar file exists'
  optional string infoMessage = 3;
}

// The delete request.
message DeleteFileRequest {
  // The item to be deleted.
  FileDto file = 1;
}

// The reply indicating if deletion of a file was successful.
message DeleteFileReply {
  oneof result {
    // The location from where file was deleted.
    string deletedFileFullName = 1;
    // The error message.
    string errorMessage = 2;
  };
}

// The request to open a file using system's default app.
// The process is started independently.
message OpenFileRequest {
  // The full file name if file to be open
  string fullFileName = 1;
}

// The reply indicating if process started.
message OpenFileReply {
  // The result indicating opening was successful.
  // None if operation was successful.
  oneof result {
    Error error = 1;
  }
}

message DetectNewItemsRequest {
}

message DetectNewItemsReply {
  repeated TaggableItemDto items = 1;
}
